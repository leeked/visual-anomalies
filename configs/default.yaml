model:
  name: resnet50
  pretrained: true
  num_classes: null  # Will be set based on dataset
  custom_model_file: null  # Path to a custom model file, if any
  backbone: resnet50  # Options: 'resnet50', 'vgg16', 'simclr'
  custom_backbone_file: null  # Path to a custom backbone file, if any
  detection_model: null  # Options: 'fasterrcnn_resnet50_fpn', etc.

training:
  epochs: 10
  batch_size: 16  # Adjusted batch size
  learning_rate: 0.001
  weight_decay: 0.0001  # Added weight decay for regularization
  optimizer: adam  # Options: 'adam', 'sgd', 'adamw'
  scheduler:
    name: cosine_annealing_warm_restarts  # Options: 'step_lr', 'cosine_annealing', 'cosine_annealing_warm_restarts'
    step_size: 7  # For StepLR
    gamma: 0.1    # For StepLR
    T_max: 10     # For CosineAnnealingLR
    T_0: 10       # For CosineAnnealingWarmRestarts
    T_mult: 1     # For CosineAnnealingWarmRestarts
    eta_min: 0    # For CosineAnnealingLR and CosineAnnealingWarmRestarts
  seed: 42  # For reproducibility
  use_amp: true  # Enable mixed precision training
  early_stopping:
    enabled: true
    patience: 5  # Number of epochs with no improvement after which training will be stopped
  class_imbalance_handling:
    method: 'balanced_sampler'  # Options: 'none', 'balanced_sampler'

data:
  data_dir: data/  # Root directory of the data, containing 'images/' and 'labels/' subdirectories
  num_workers: 4
  augmentations:
    horizontal_flip: true
    horizontal_flip_prob: 0.5
    vertical_flip: true
    vertical_flip_prob: 0.5
    rotation: true
    rotation_degrees: 15
    rotation_prob: 0.5
    color_jitter: true
    brightness: 0.2
    contrast: 0.2
    saturation: 0.2
    hue: 0.1
    color_jitter_prob: 0.5
    random_crop: false
    crop_height: 512
    crop_width: 512
    random_crop_prob: 0.5
  normalize_mean: [0.485, 0.456, 0.406]
  normalize_std: [0.229, 0.224, 0.225]
  train_split: 0.7
  val_split: 0.15
  test_split: 0.15

metrics:
  iou_thresholds: null  # Include mAP@0.5 and mAP@0.95
  matching_iou_threshold: 0.5  # IoU threshold for matching predictions to ground truth
  include_metrics: ['iou', 'precision', 'recall', 'f1_score']  # Metrics to compute

logging:
  log_dir: logs
  checkpoint_dir: checkpoints
